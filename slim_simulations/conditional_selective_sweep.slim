initialize() {
	initializeTreeSeq();
	initializeMutationRate(0);
	initializeMutationType("m1", 0.5, "f", 0.0);
	initializeMutationType("m2", 0.5, "f", 0.5);
	initializeGenomicElementType("g1", m1, 1.0);
	initializeGenomicElement(g1, 0, 99);
	initializeRecombinationRate(0.5);
}

1 early() {
	metapopSide = 10; // number of subpops along one side of the grid
	metapopSize = metapopSide * metapopSide;
	for (i in 1:metapopSize)
		sim.addSubpop("p"+asString(i), 500);
	subpops = sim.subpopulations;
	for (x in 1:metapopSide)
		for (y in 1:metapopSide)
		{
			destID = (x - 1) + (y - 1) * metapopSide + 1;
			destSubpop = subpops[destID - 1];
			if (x > 1) // left to right
				destSubpop.setMigrationRates(destID - 1, 0.05);
			if (x < metapopSide) // right to left
				destSubpop.setMigrationRates(destID + 1, 0.05);
			if (y > 1) // top to bottom
				destSubpop.setMigrationRates(destID - metapopSide, 0.05);
			if (y < metapopSide) // bottom to top
				destSubpop.setMigrationRates(destID + metapopSide, 0.05);
		}
}

100 late() {
	target = sample(p55.genomes, 1);
	target.addNewDrawnMutation(m2, 5);
	//sim.outputFull(tempdir() + "slim.txt");
}


100: late() {
	mut = sim.mutationsOfType(m2);
	catn(asString(size(mut)) + " " + asString(sim.mutationFrequencies(NULL, mut)));
	if (size(mut) == 1)
	{
		if (sim.mutationFrequencies(NULL, mut) > 0.8)
		{
			catn("ESTABLISHED");
			sim.treeSeqOutput("/Users/jameskitchens/Desktop/conditional_selective_sweep_2.trees");
			sim.simulationFinished();			
			community.deregisterScriptBlock(self);
		}
	}
	else
	{
		catn("LOST â€“ RESTARTING");
		// go back to tick 1000
		//sim.readFromPopulationFile(tempdir() + "slim.txt");
		// start a newly seeded run
		//setSeed(rdunif(1, 0, asInteger(2^62) - 1));
		// re-introduce the sweep mutation
		target = sample(p55.genomes, 1);
		target.addNewDrawnMutation(m2, rdunif(1,0,99));
	}
}



200 late() {
	sim.treeSeqOutput("/Users/jameskitchens/Desktop/conditional_selective_sweep_2.trees");
	sim.simulationFinished();			
	community.deregisterScriptBlock(self);
}